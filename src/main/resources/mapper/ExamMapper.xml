<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.exam.exam_system.mapper.exammapper.ExamMapper">
    <resultMap id="BaseResultMap" type="com.exam.exam_system.pojo.response.ExamVO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="subject_id" property="subjectId" jdbcType="VARCHAR"/>
        <result column="exam_type_id" property="examTypeId" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
        <result column="name" property="name" jdbcType="VARCHAR"></result>
        <result column="exam_name" property="examName" jdbcType="VARCHAR"></result>
    </resultMap>

    <insert id="insert" parameterType="com.exam.exam_system.pojo.request.ExamRequest">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into exam_exam (user_id,subject_id,exam_type_id,status)
        values (#{examRequest.userId,jdbcType=BIGINT}, #{examRequest.subjectId,jdbcType=VARCHAR},
        #{examRequest.examTypeId,jdbcType=BIGINT}, #{examRequest.status,jdbcType=INTEGER})
    </insert>

    <select id="selectExamAll" resultMap="BaseResultMap">
        SELECT a.id
        ,a.user_id
        ,a.subject_id
        ,a.exam_type_id
        ,a.STATUS
        ,a.create_time
        ,a.modify_time
        ,b.name
        ,c.exam_name
        FROM exam_exam a
        left join exam_user b
        on a.user_id = b.id
        left join
        exam_type c
        on c.id = a.subject_id
        <where>
            <if test="request.userId != null">
                a.user_id = #{request.userId}
            </if>
            <if test="request.subjectId != null and request.subjectId != ''">
                and a.FIND_IN_SET(#{request.subjectId },subject_id)
            </if>
            <if test="request.examTypeId != null">
                and a.exam_type_id = #{request.examTypeId}
            </if>
            <if test="request.status != null">
                and a.status = #{request.status}
            </if>
            <if test="request.createMinTime != null">
                and a.create_time <![CDATA[ >= ]]> #{request.createMinTime}
            </if>
            <if test="request.createMaxTime != null">
                and a.create_time <![CDATA[ <= ]]> #{request.createMaxTime}
            </if>
        </where>
        order by a.create_time desc
        LIMIT #{offset},#{limit}
    </select>
    <select id="selectExamCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM exam_exam a
        left join exam_user b
        on a.user_id = b.id
        left join
        exam_type c
        on c.id = a.subject_id
        <where>
            <if test="request.userId != null">
                a.user_id = #{request.userId}
            </if>
            <if test="request.subjectId != null and request.subjectId != ''">
                and a.FIND_IN_SET(#{request.subjectId },subject_id)
            </if>
            <if test="request.examTypeId != null">
                and a.exam_type_id = #{request.examTypeId}
            </if>
            <if test="request.status != null">
                and a.status = #{request.status}
            </if>
            <if test="request.createMinTime != null">
                and a.create_time <![CDATA[ >= ]]> #{request.createMinTime}
            </if>
            <if test="request.createMaxTime != null">
                and a.create_time <![CDATA[ <= ]]> #{request.createMaxTime}
            </if>
        </where>
    </select>
</mapper>