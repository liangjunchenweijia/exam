<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.exam_system.mapper.usermapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.exam.exam_system.pojo.response.UserVO" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
        <result column="user_age" property="userAge" jdbcType="INTEGER" />
        <result column="user_sex" property="userSex" jdbcType="INTEGER" />
        <result column="user_type" property="userType" jdbcType="INTEGER" />
        <result column="user_secret_protection" property="userSecretProtection" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    </resultMap>

    <resultMap id="LoginUser" type="com.exam.exam_system.pojo.LoginUserPojo" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
        <result column="user_age" property="userAge" jdbcType="INTEGER" />
        <result column="user_sex" property="userSex" jdbcType="INTEGER" />
        <result column="user_type" property="userType" jdbcType="INTEGER" />
        <result column="user_secret_protection" property="userSecretProtection" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
        <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    </resultMap>

    <!--注册用户-->
    <sql id="insertUserSql">
      user_name,user_pwd,user_age,user_sex,user_type,user_secret_protection,is_deleted
    </sql>
    <insert id="insertUser" parameterType="com.exam.exam_system.pojo.request.UserRequest">
        INSERT INTO exam_user (<include refid="insertUserSql"/>)
        VALUES (
        #{userRequest.userName}
        ,#{userRequest.userPwd}
        ,#{userRequest.userAge}
        ,#{userRequest.userSex}
        ,#{userRequest.userType}
        ,#{userRequest.userSecretProtection}
        ,#{userRequest.isDeleted}
        )
    </insert>
    <update id="updateUserById" parameterType="com.exam.exam_system.pojo.request.UserRequest">
        update exam_user
        set modify_time = #{userRequest.modifyTime}
        <if test="userRequest.userName != null and userRequest.userName != ''">
            ,user_name = #{userRequest.userName}
        </if>
        <if test="userRequest.userPwd != null and userRequest.userPwd != ''">
            ,user_pwd = #{userRequest.userPwd}
        </if>
        <if test="userRequest.userAge != null">
            ,user_age = #{userRequest.userAge}
        </if>
        <if test="userRequest.userSex != null">
            ,user_sex = #{userRequest.userSex}
        </if>
        <if test="userRequest.userType != null">
            ,user_type = #{userRequest.userType}
        </if>
        <if test="userRequest.userSecretProtection != null and userRequest.userSecretProtection != ''">
            ,user_secret_protection = #{userRequest.userSecretProtection}
        </if>
        WHERE id = #{userRequest.id}
    </update>

    <update id="batchDelStuByIds">
        update exam_user
        SET is_deleted = 2
        WHERE id IN
        <foreach collection="userIds" item="userIds" open="(" close=")" separator=",">
            #{userIds}
        </foreach>
    </update>

    <!--校验用户是否已存在-->
    <select id="checkUser" parameterType="java.lang.String" resultType="java.lang.Integer">
       SELECT count(1)
        FROM exam_user
        WHERE user_name = #{userName}
        AND is_deleted = 1
    </select>

    <select id="selectUserInfo" parameterType="com.exam.exam_system.pojo.request.UserRequest" resultMap="LoginUser">
        SELECT id
            ,user_name
            ,user_pwd
            ,user_age
            ,user_sex
            ,user_type
            ,is_deleted
        FROM exam_user
        WHERE user_name = #{userRequest.userName}
            AND user_pwd = #{userRequest.userPwd}
    </select>

    <select id="selectUserByNameAndEncrypted" parameterType="com.exam.exam_system.pojo.request.UserRequest" resultMap="BaseResultMap">
        SELECT id
            ,user_name
            ,user_pwd
            ,user_age
            ,user_sex
            ,user_type
        FROM exam_user
        WHERE user_name = #{userRequest.userName}
            AND user_secret_protection = #{userRequest.userSecretProtection}
            AND is_deleted = 1
    </select>

    <select id="selectUserById" resultMap="BaseResultMap">
        select
            id
            ,user_name
            ,user_pwd
            ,user_age
            ,user_sex
            ,user_type
        from
            exam_user
        where id = #{id}
        AND is_deleted = 1
    </select>

    <select id="selectUserAll" resultMap="BaseResultMap">
        SELECT id
        ,user_name
        ,user_age
        ,user_sex
        ,user_type
        ,create_time
        ,is_deleted
    FROM exam_user
    WHERE user_type = 1
        <if test="userRequest.userName != null and userRequest.userName != ''">
            and user_name LIKE CONCAT('%',#{userRequest.userName},'%')
        </if>
        <if test="userRequest.userMinAge != null">
            and user_age <![CDATA[ >= ]]> #{userRequest.userMinAge}
        </if>
        <if test="userRequest.userMaxAge != null">
            and user_age <![CDATA[ <= ]]> #{userRequest.userMaxAge}
        </if>
        <if test="userRequest.createMinTime != null">
            and create_time <![CDATA[ >= ]]> #{userRequest.createMinTime}
        </if>
        <if test="userRequest.createMaxTime != null">
            and create_time <![CDATA[ <= ]]> #{userRequest.createMaxTime}
        </if>
        <if test="userRequest.userSex != null">
            and user_sex = #{userRequest.userSex}
        </if>
        <if test="userRequest.isDeleted != null">
            and is_deleted = #{userRequest.isDeleted}
        </if>
        order by create_time desc
        LIMIT #{offset},#{limit}
    </select>

    <select id="selectUserAllCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM exam_user
        WHERE user_type = 1
        <if test="userRequest.userName != null and userRequest.userName != ''">
            and user_name LIKE CONCAT('%',#{userRequest.userName},'%')
        </if>
        <if test="userRequest.userMinAge != null">
            and user_age <![CDATA[ >= ]]> #{userRequest.userMinAge}
        </if>
        <if test="userRequest.userMaxAge != null">
            and user_age <![CDATA[ <= ]]> #{userRequest.userMaxAge}
        </if>
        <if test="userRequest.createMinTime != null">
            and create_time <![CDATA[ >= ]]> #{userRequest.createMinTime}
        </if>
        <if test="userRequest.createMaxTime != null">
            and create_time <![CDATA[ <= ]]> #{userRequest.createMaxTime}
        </if>
        <if test="userRequest.userSex != null">
            and user_sex = #{userRequest.userSex}
        </if>
        <if test="userRequest.isDeleted != null">
            and is_deleted = #{userRequest.isDeleted}
        </if>
    </select>
</mapper>